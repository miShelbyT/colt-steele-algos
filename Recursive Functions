With recursive functions, we will invoke the same function over and over in a different way, until we reach our base case: the point where the function stops/breaks out

Helper Method Recursions - the helper method that is called INSIDE the outer function is the one that is recursive:

i.e.,


function outer(input) {

  let outerScopedVariable = []

  function helper(helperInput) {
    helper(helperInput--)
  }
helper(input)

return outerScopedVariable

}